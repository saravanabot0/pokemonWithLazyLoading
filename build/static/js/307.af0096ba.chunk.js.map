{"version":3,"file":"static/js/307.af0096ba.chunk.js","mappings":"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","sources":["components/pokemonlists/pokemonCard.js","components/model/modelPopup.js","components/pokemonlists/pokemonLists.js"],"sourcesContent":["import React from 'react';\r\nimport './pokemonLists.css';\r\n\r\nfunction PokemonCard({keyValue, id, image, name, type, pokemonData, detail, modalShow}) {\r\n    const style = type + \" cardContainer\";\r\n\r\n    const handleClick = () => {\r\n        detail(pokemonData,name);\r\n        modalShow(true);\r\n    }\r\n  return (\r\n    <div className={style} key={keyValue} onClick={()=> handleClick()}>\r\n        <div className='number'><small className='smallNumber'> #0{id} </small></div>\r\n        <img src={image} alt={name}/>\r\n        <div className='detailWrapper'>\r\n            <h4> {name} </h4>\r\n            <small> Type: {type} </small>\r\n        </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PokemonCard\r\n","import React from 'react';\r\nimport './modelPopup.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nfunction ModelPopup(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      dialogClassName=\"modal-90w\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {props.header}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {props.content}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModelPopup","import { React, useState, useEffect } from \"react\";\r\nimport \"./pokemonLists.css\";\r\nimport PokemonCard from \"./pokemonCard\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ModelPopup from \"../model/modelPopup\";\r\nimport pokemonTitleImg01 from \"../../assets/pokemon-logo.png\";\r\nimport pokemonTitleImg02 from \"../../assets/pokemon-logo01.png\";\r\n\r\nfunction PokemonLists() {\r\n\r\n  const [allPokemons, setAllPokemons] = useState([]);\r\n  const [loadMore, setLoadMore] = useState(\"https://pokeapi.co/api/v2/pokemon?limit=20\");\r\n  const [pokemonDetails, setPokemonDetails] = useState(null);\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  // ----------------------------------------- Api Call ---------------------------------------\r\n  const getAllPokemons = async () => {\r\n    const res = await fetch(loadMore).catch(function (error) {\r\n      console.log(error);\r\n    });\r\n    const data = await res.json();\r\n\r\n    setLoadMore(data.next);\r\n\r\n    function createPokemonObject(results) {\r\n      results.forEach(async (pokemon) => {\r\n        const res = await fetch(\r\n          `https://pokeapi.co/api/v2/pokemon/${pokemon.name}`\r\n        ).catch(function (error) {\r\n          console.log(error);\r\n        });\r\n        const data = await res.json();\r\n        setAllPokemons((currentList) => [...currentList, data]);\r\n      });\r\n    }\r\n    createPokemonObject(data.results);\r\n  };\r\n\r\n  const PokemonDetail = (data, name) => {\r\n    setPokemonDetails(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllPokemons();\r\n  }, []);\r\n\r\n  const style = pokemonDetails?.types[0].type.name;\r\n\r\n  // -------------------------------------------- ModalPopup Content --------------------------------\r\n  const modalContent = () => {\r\n    const firstFiveMoves = pokemonDetails?.moves.slice(0, 5);\r\n    return (\r\n      <div className=\"individualContainer\">\r\n        <div className=\"insideContainer\">\r\n          <div className=\"pokemonImg\">\r\n            <img\r\n              src={pokemonDetails?.sprites.other.dream_world.front_default}\r\n            />\r\n          </div>\r\n          <div className=\"pokemonPowers\">\r\n            <h2>\r\n              {\" \"}\r\n              Name : <span> {pokemonDetails?.name} </span>{\" \"}\r\n            </h2>\r\n            <p>\r\n              {\" \"}\r\n              Weight : <span> {pokemonDetails?.weight} </span>{\" \"}\r\n            </p>\r\n            <p>\r\n              {\" \"}\r\n              Height : <span> {pokemonDetails?.height} </span>{\" \"}\r\n            </p>\r\n            <p className=\"types\">\r\n              Types :{\" \"}\r\n              {pokemonDetails &&\r\n                pokemonDetails?.types?.map((item, index) => (\r\n                  <span key={index}> {item.type.name} </span>\r\n                ))}\r\n            </p>\r\n            <p className=\"ability\">\r\n              Abilities :{\" \"}\r\n              {pokemonDetails?.abilities?.map((data, index) => (\r\n                <span key={index}> {data.ability.name} </span>\r\n              ))}\r\n            </p>\r\n            <p className=\"mb-1\"> Moves :- </p>\r\n            <div className=\"moves\">\r\n              {firstFiveMoves?.map((item, index) => (\r\n                <span key={index} className={style}>\r\n                  {\" \"}\r\n                  {item.move.name}{\" \"}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"pokemonContainer\">\r\n      <div className=\"pokemonTitleImg\">\r\n        <img src={pokemonTitleImg01} alt=\"pokemonTitle01\" />\r\n        <img src={pokemonTitleImg02} alt=\"pokemonTitle02\" />\r\n      </div>\r\n      <div className=\"allContainer\">\r\n        {allPokemons &&\r\n          allPokemons.map((item, index) => (\r\n            <div key={index} className=\"cardWidth\">\r\n              <PokemonCard\r\n                keyValue={index}\r\n                id={item.id}\r\n                image={item.sprites.other.dream_world.front_default}\r\n                name={item.name}\r\n                type={item.types[0].type.name}\r\n                pokemonData={item}\r\n                detail={PokemonDetail}\r\n                modalShow={setModalShow}\r\n              />\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <Button onClick={() => getAllPokemons()}> Load More... </Button>\r\n      <ModelPopup\r\n        show={modalShow}\r\n        onHide={() => setModalShow(!modalShow)}\r\n        content={modalContent()}\r\n        header={`${pokemonDetails?.name} Details...`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonLists;\r\n"],"names":["_ref","keyValue","id","image","name","type","pokemonData","detail","modalShow","style","_jsxs","className","onClick","children","_jsx","src","alt","props","Modal","_objectSpread","dialogClassName","centered","closeButton","header","content","Button","onHide","_useState","useState","_useState2","_slicedToArray","allPokemons","setAllPokemons","_useState3","_useState4","loadMore","setLoadMore","_useState5","_useState6","pokemonDetails","setPokemonDetails","_useState7","_useState8","setModalShow","getAllPokemons","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","res","data","createPokemonObject","wrap","_context2","prev","next","results","forEach","_ref2","_callee","pokemon","_context","fetch","concat","catch","error","console","log","sent","json","currentList","_toConsumableArray","stop","_x","apply","arguments","PokemonDetail","useEffect","types","pokemonTitleImg01","pokemonTitleImg02","map","item","index","PokemonCard","sprites","other","dream_world","front_default","ModelPopup","show","_pokemonDetails$types","_pokemonDetails$abili","firstFiveMoves","moves","slice","weight","height","abilities","ability","move","modalContent"],"sourceRoot":""}